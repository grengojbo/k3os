#!/bin/bash
set -e

if [ "$ARCH" != "arm" ]; then
    export DOCKER_BUILDKIT=1
fi

build_all()
{
    if [ "$#" = 0 ]; then
        set -- [0-9][0-9]*
    fi

    for i; do
        i=$(basename $i)
        IMAGE=${i##[0-9][0-9]-}
        FULL_IMAGE=$REPO/k3os-$IMAGE:$TAG

        cd $i
        if [ -e archs ] && ! grep -w -q $ARCH archs; then
            echo skipping $FULL_IMAGE for $ARCH
            cd ..
            continue
        fi

        echo building $FULL_IMAGE
        ROOT=.
        if [ -e root ]; then
            ROOT=$(readlink -f root)
        fi
        echo "---------------------------------- Start ${i}"
        docker build --build-arg TAG=$TAG \
            --build-arg VERSION=${VERSION} \
            --build-arg REPO=${REPO} \
            --build-arg ARCH=${ARCH} \
            --build-arg ENABLE_QEMU=${ENABLE_QEMU} \
            --build-arg CUSTOM_PACKAGES=${CUSTOM_PACKAGES} \
            --build-arg ENABLE_VAULT=${ENABLE_VAULT} \
            --build-arg ENABLE_SELINUX=${ENABLE_SELINUX} \
            --build-arg DISABLE_MDADM=${DISABLE_MDADM} \
            --build-arg DISABLE_LVM=${DISABLE_LVM} \
            --build-arg DISABLE_ISCSI=${DISABLE_ISCSI} \
            -f $(pwd)/Dockerfile -t $FULL_IMAGE $ROOT
        cd ..
        echo "----------------------------------"
    done
}

copy_all()
{
    OUTPUT=$1
    shift

    if [ "$#" = 0 ]; then
        set -- [0-9][0-9]*
    fi

    for i; do
        i=$(basename $i)
        IMAGE=${i##[0-9][0-9]-}
        FULL_IMAGE=$REPO/k3os-$IMAGE:$TAG

        cd $i
        if [ -e archs ] && ! grep -w -q $ARCH archs; then
            echo skipping $FULL_IMAGE for $ARCH
            cd ..
            continue
        fi

        echo building $FULL_IMAGE
        ID=$(docker create $FULL_IMAGE)
        echo $(readlink -f ${OUTPUT})
        rm -rf output
        docker cp ${ID}:/output .
        docker rm -fv $ID
        cp ./output/* ${OUTPUT}/
        rm -rf ./output
        cd ..
    done
}
